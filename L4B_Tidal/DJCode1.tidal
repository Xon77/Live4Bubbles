-- DJ Code 1
td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n (run 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # channel (fast 0.5 (run 3)) -- s1d1 -> "<[t ~ ~ ~]!15 t(<1 2>,32) [t ~ ~ ~]!15 [t t? t? t?] [t ~ ~ ~]!15 [[t t?] t? t? t?]>*[^d1]"
-- sound "skick gabkick superperc ike2 ike3 superfbk supersawfbk superfmfbk"
td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2 3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2 3 4" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2 3 10 10" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2 7 8 9 14 3 2 1 3 10 10" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- |> speed "1 1.5 0.7" -- |* speed "^1Rat" -- |* djf "0.7 1.3"

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n (choose [0,2,3]) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Répétera l'aléatoire en fonction du chiffre de d1 - Random by Cycle ?

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n (cycleChoose [0,2,3]) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- only picks once per cycle -- Identique

td1 x $ slow 2 $ struct s1d1 $ fast "^d1" $ sound "^1Fol" # n "^1Buf" |+ n (choose [0,2,3]) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Utilisation de fast pour avoir un aléatoire constant - Possibilité de jouer sur la répétition en modifiant d1

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n (irand 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Aléatoire complet

td1 x $ slow 2 $ struct s1d1 $ fast "^d1" $ sound "^1Fol" # n (irand 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Aléatoire complet Rapide

td1 x $ slow 2 $ struct s1d1 $ sound "^1Fol" # n "^1Buf" |+ n (wchoose [(0,0.5),(2,0.35),(3,0.15)]) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Choose with weight

td1 x $ slow 2 $ struct s2d1 $ fast "^d1" $ sound "^1Fol" # n "^1Buf" |+ n (wchoose [(0,0.8),(2,0.15),(3,0.05)]) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Choose with weight 2

td1 x $ slow 8 $ struct s7d1 $ sound "^1Fol" # n "^1Buf" |+ n "6 2 3 5 0 8 7 87 2 23 7 78 3 5 6 2" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ chop "<[16 64 32]>*[^d1]" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "<4 8 12>*[^d1]" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ sound "^1Fol" # n (run 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ fast 2 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ fast 4 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # speed 1 |*| speed "1 2 0.5 2 1 1.5 0.7"

td1 x $ jux rev $ chop "^d1" $ fast 8 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ striate "^d1" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- ???

td1 x $ slice "^d1" "[<0*8 0*2> 3*4 2 4] [4 .. 7]*[^d1]" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # cps (slow 2 $ (sine * 0.5) + 0.2) -- error if O in d / tempo -- # cps (135/60/4)

td1 x $ slice "^d1" "7 6 5 4 3 2 1 0" $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slice "^d1" "7 6 5 4 3 2 1 0" $ sound "^1Fol" # n (run 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- New à partir de là

td1 x $ struct "[t ~ t/16 ~]" $ fast "[^d1]" $ sound "^1Fol" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- different "^d1" ?

td1 x $ struct s2d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n 0

td1 x $ echoWith 4 (1/("^d1")) (|* speed "0.9 1.1 0.7 0.8") $ struct s2d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n 0

td1 x $ struct s3d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n 0

td1 x $ struct s2d1 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s3d1 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s8d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n 0

td1 x $ struct s8d1 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s10d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s11d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct "<[t*8 t*4] t*[^d1]>" $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- better not to automatize the struct

td1 x $ struct s9d1 $ sound "^1Fol" # n ("6 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("16 10 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("8 10 9 9 7"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("8 10 9 9 7"+"^1Buf") # distort "<0 0.03 0.05 0.1>" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("8 10 9 9 7 8 14 18 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("8 10 9 9 7 8 14 18 8"+"^1Buf") # legato "3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ struct s9d1 $ sound "^1Fol" # n ("8 20 8 14 6 7 8 7 18 6"+"^1Buf") # legato "3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ struct s9d1 $ sound "^1Fol" # n ("<8 20 8 14 6 7 8 7 18 6>"+"^1Buf") # legato "3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ struct s9d1 $ sound "^1Fol" # n ("<8 20 8 14 6 7 8 7 18 6 66>"+"^1Buf") # legato "3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ struct s9d1 $ sound "^1Fol" # n ("<8 20 8 14 6 7 8 7 18 6 6>"+"^1Buf") # legato "6" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ struct s9d1 $ sound "^1Fol" # n ("<8 20 8 14 6 7 8 7 18 6 6>"+"^1Buf") # legato "6" # lpf (range 60 5000 $ perlin2With (cosine) (sine)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit -- Why perlin2With give late messages ?

td1 x $ struct s9d1 $ sound "^1Fol" # n ("<16 10 8 14>"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n (irand 10) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n (irand 200) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("^1Buf" |+ (run 16)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n (run (irand 10)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n (run (irand 200)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s9d1 $ sound "^1Fol" # n ("^1Buf" |+ (run 10)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- (n (run 10) ~> "^1Buf") -- n (run 10)+"^1Buf"

td1 x $ struct s12d1 $ sound "^1Fol" # n (irand 18) # legato "7" # distort "<0 0.3 0.5 0.1>" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # lpf (range 60 5000 $ perlin2With (cosine) (sine)) -- (cosine*2) (sine*2))-- legato & dud en conflit

td1 x $ struct s12d1 $ sound "^1Fol" # n (irand 18) # legato "2" # distort "<0 0.3 0.2 0.1>" # lpf (range 60 5000 $ perlin2With (rand) (rand)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- (cosine*2) (sine*2)) -- legato & dud en conflit -- triggers a lot of late messages

td1 x $ struct s12d1 $ sound "^1Fol" # distort "<0 0.3 0.2 0.1>" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s12d1 $ sound "^1Fol" # crush "12 8 12 16" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s12d1 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # freeze "0.1" -- # freeze "0.1 0.2 0.4" -- makes crash the server ???

td1 x $ fast "^d1" $ slow 3 $ euclid "<3 5>" "[8 16]/4" $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- XXX -- XXX

td1 x $ fast "^d1" $ slow 3 $ euclid 2 5 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 2))

td1 x $ fast "^d1" $ slow 3 $ euclid 3 4 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 3))

td1 x $ fast "^d1" $ slow 3 $ euclid 3 5 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 3))

td1 x $ fast "^d1" $ slow 3 $ euclid 3 7 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 3))

td1 x $ fast "^d1" $ slow 3 $ euclid 3 8 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 3))

td1 x $ fast "^d1" $ slow 3 $ euclid 4 7 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("^1Buf" + (run 4))

td1 x $ fast "^d1" $ slow 3 $ euclid 4 9 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("1 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 4 11 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("4 5 6 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 6 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("1 7 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 7 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("7 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 8 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("6 10 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 9 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("6 7 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 11 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("0 2 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 12 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("0 2 1 7 0 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 16 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("6 2 0 3 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 7 8 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n ("6 2 4 8"+"^1Buf")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 8 $ sound "^1Fol" # n "^1Buf" # legato 100 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- legato & dud en conflit

td1 x $ fast "^d1" $ slow 3 $ euclid 3 4 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n (run 64)  -- Late messages from 57 XXX Interesting effect

td1 x $ fast "^d1" $ slow 3 $ euclid 3 5 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n (run 8)

td1 x $ fast "^d1" $ slow 3 $ euclid 3 8 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # n (run "^d1")

td1 x $ fast "^d1" $ slow 3 $ euclid 5 8 $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" --  |+ n (run 12)

td1 x $ chop "<[16 64 32]>*[^d1]" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "<4 8 12>*[^d1]" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ sound "^1Fol" # n (run 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ jux rev $ chop "^d1" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ striate "^d1" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- ???

td1 x $ slice "^d1" "[<0*8 0*2> 3*4 2 4] [4 .. 7]*[^d1]" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slice "^d1" "7 6 5 4 3 2 1 0" $ sound "^1Fol" # n (irand 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slice "^d1" "7 6 5 4 3 2 1 0" $ sound "^1Fol" # n (run 100) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- from below New Additions from 64 to 79

td1 x $ slow 4 $ euclid 2 5 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 2)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- same as 64 with different n & slow before euclid ...

td1 x $ slow 4 $ euclid 3 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 3)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 3 5 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 4)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 3 7 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 6)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 3 8 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 7)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 7 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 77)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 7 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (slow 3 $ range 1 12 sine)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 7 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (slow 2 $ range 6 18 saw)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 7 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fast "1 0.5 2" (run 17)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 3 4 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run "^d1") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 9 $ sound "[^1Fol]*[^d1]" # n ("1 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 4 11 $ sound "[^1Fol]*[^d1]" # n ("4 5 6 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 6 $ sound "[^1Fol]*[^d1]" # n ("1 7 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 7 $ sound "[^1Fol]*[^d1]" # n ("7 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 8 $ sound "[^1Fol]*[^d1]" # n ("6 10 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 9 $ sound "[^1Fol]*[^d1]" # n ("6 7 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 11 $ sound "[^1Fol]*[^d1]" # n ("0 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 12 $ sound "[^1Fol]*[^d1]" # n ("0 2 1 7 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 5 16 $ sound "[^1Fol]*[^d1]" # n ("6 2 0 3 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid 7 8 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("6 2 4 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- same as 79 with different n & slow before euclid

td1 x $ euclid 2 5 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 2)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- same as 64 with different n & slow after euclid ...

td1 x $ euclid 3 4 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 3)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 3 5 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 4)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 3 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 6)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 3 8 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 7)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (run 77)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (slow 3 $ range 1 12 sine)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("^1Buf" + (slow 2 $ range 6 18 saw)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fast "1 0.5 2" (run 17)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 3 4 $ slow 4 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run "^d1") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 9 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("1 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 4 11 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("4 5 6 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 6 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("1 7 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 7 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("7 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 8 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("6 10 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 9 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("6 7 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 11 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("0 2 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 12 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("0 2 1 7 0 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 5 16 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("6 2 0 3 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid 7 8 $ slow 4 $ sound "[^1Fol]*[^d1]" # n ("6 2 4 8"+"^1Buf") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- same as 79 with different n & slow after euclid

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- NEW with t euclid

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run 2) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run 3) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run 5) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ fast 2 $ sound "^1Fol" # n "^1Buf" |+ n (run 6) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run 7) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run 10) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 6 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 12) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n (run "^d1") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n "<[1 2 3, 3 6 7 9*2, 16*2, 1 3]>" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "^d1" 64 $ slow 3 $ sound "^1Fol" # n "^1Buf" |+| n "<[1 2*2 7, 3*2 6, 7 9*2, 16*2, 1 7 9 11, 2 5 8, 2 5 8]>" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" |+| n "1 2 9" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" |+| n "1 2 3 4 6 7 10" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" |+| n "1 2 3 6 10 15 16 18 20" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" |+| n "[1 2 3, 3 6 7, 9*2, 1 3]" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 4 $ euclid "^d1" 64 $ sound "^1Fol" # n "^1Buf" |+| n (run "^d1") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 8 $ euclid "[^d1]" "[^d1]" $ sound "^1Fol" |+| n "[^1Buf]*[^d1]" |+| n (run 59) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ euclid "[^d1]" "[^d1]" $ slow 8 $ sound "^1Fol" |+| n "[^1Buf]*[^d1]" |+| n (run 59) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ mask "[1 0 1 0 1 0 1 0]*2" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- with Markov & Masks XXX

td1 x $ mask "[1 0 0 0 1 0 1 0]*2" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fmap ([0, 2, 3, 4]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ mask "[1 1 0 1 0 1 1 0]*4" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ mask "[1 1 1 0 1 1 0 1]*3" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 77) |+ n (fmap ([0, 2, 3, 4]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ mask "[1 1 1 0 1 1 0 1]/3" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 10) |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ mask "[1 0 1 0 0 1 0 1]*2" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 100) |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Adding of run on n

td1 x $ mask "[1 0 0 0 1 0 1 0]*[^d1]" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ struct s1d1 $ sound "[^1Fol]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat 16 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- with Markov & struct XXX

td1 x $ struct s1d1 $ sound "[^1Fol]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] )) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- with Markov & struct XXX

td1 x $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"
-- Section with Footworks
td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<5 10>" 1 # n "^1Buf" |+ n (fast 3 (run "<4 8 12>")) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<10 25>" 1 # n "^1Buf" |+ n (run 7) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<7 6 12>" 1 # n "^1Buf" |+ n (run 20) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<3 10 7 4>" 1 # n "^1Buf" |+ n (run 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<0 5 17 18>" 1 # n "^1Buf" |+ n (fast 5 (run 16)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<2 5 8 11>" 1 # n "^1Buf" |+ n (irand 16) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<1 4 6>" 1 # n "^1Buf" |+ n (irand 32) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<3 10 7>" 1 # n "^1Buf" |+ n (irand 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (run "<3 6 9 7>") 2 # n "^1Buf" |+ n (run 32) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (run "<1 3 5>") 1 # n "^1Buf" |+ n (fast "<2 5>" $ run 12) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (irand 16) 1 # n "^1Buf" |+ n (run "<6 3 9>") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (irand 24) 1 # n "^1Buf" |+ n (irand 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 "<3 9> <4 2>" 1 # n "^1Buf" |+ n (run "<5 10 3>") # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (randcat ["10 2", "6 4 11", "1 12 24 4","12 13 14 17"]) 1 # n "^1Buf" |+ n (fast 5 (run 16)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (randcat ["1 2", "3 5", "7 11 13"]) 1 # n "^1Buf" |+ n (fast 2 $ run 12) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (randcat ["2 4 6", "1 8", "5"]) 1 # n "^1Buf" |+ n (fast 4 $ run 10) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (randcat [1, 7, 23, 24]) 1 # n "^1Buf" |+ n (fast 5 (run 16)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (randcat ["0 5", "2 3", "4 7"]) 1 # n "^1Buf" |+ n (fast 3 $ irand 20) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (run "<6 24>") 1 # n "^1Buf" |+ n (fast 5 (run 16)) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ sound "[^1Fol]*[^d1]" # foo2 (run "<7 35>") 1 # n "^1Buf" |+ n (irand 77) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ beat "[3,4.2,9,11,14]" 16 $ sound "^1Fol" # n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Beat works with Geikha extension.

td1 x $ beat "[3,4,9,14]" 16 $ sound "^1Fol" # n "^1Buf" |+ n (irand 30) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Beat works with Geikha extension.

td1 x $ beat "[3,4,9,14]" 16 $ fast 4 $ sound "^1Fol" # n "^1Buf" |+ n (irand 30) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Beat works with Geikha extension.

td1 x $ beat "[1,3,4,8,9,14]" 16 $ fast 4 $ sound "^1Fol" # n "^1Buf" |+ n (irand 30) # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Beat works with Geikha extension.

td1 x $ slow 2 $ struct "<[t ~ ~ ~]!15 t(<1 2>,32) [t ~ ~ ~]!15 [t t? t? t?] [t ~ ~ ~]!15 [[t t?] t? t? t?]>*[^d1]" $ sound "^1Fol" # n "^1Buf" |+ n "[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10]/3" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- try slow down with /2 on 3 items or /3 on 4 items

td1 x $ slow 2 $ struct "<[t ~ ~ ~]!15, t(<1 2>,32), [t ~ ~ ~]!15 [t t? t? t?] [t ~ ~ ~]!15, [[t t?] t? t? t?]>*[^d1]" $ sound "^1Fol" # n "^1Buf" |+ n "[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10]/4" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct

td1 x $ slow 2 $ struct s16d1 $ sound "^1Fol" # n "^1Buf" |+ n "[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10]/4" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct -- Super with d1 of 4 et Buf à 45 & Fol de 4 XXX

td1 x $ slow 2 $ struct s15d1 $ sound "^1Fol" # n "^1Buf" |+ n "[0 2 [4 5], 7 [9 11] 12]/8 [[14 10] 3, [2 [1 0]] [3 10] 10]/4" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct -- Super with d1 of 4 et Buf à 45 & Fol de 4 XXX -- ligne 189 triggers lots of lates & skip messages ???

td1 x $ slow 2 $ struct s15d1 $ sound "^1Fol" # n "^1Buf" |+ n "[0 3 [6 9], 12 [15 18]]/8 [4 1, [7 2 5] [10 13]]/4" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct -- Super with d1 of 4 et Buf à 45 & Fol de 4 XXX

td1 x  $ slow 2 $ struct s15d1 $ sound "^1Fol" # n "^1Buf" |+ n "[0 2 4 7, [11 13 14] [15 17]]/8 [5 3 [6 9], 12 [10 7 [4 1]]]/4" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct -- Super with d1 of 4 et Buf à 45 & Fol de 4 XXX - ligne 191 triggers lots of lates & skip messages ???

td1 x $ slow 8 $ struct s15d1 $ sound "^1Fol" # n "^1Buf" |+ n "[[[0 13 7], [2 11]/3, [4 9 15]/5], [[3 10]/6, 5 14, [6 [8 12]]]/4, [1 6 9 13]/7]/8 [[14 2], [3 5 [10 0]], [[1 11]/2, 6]/3, [[7 4] [13 8]]]/5" # gain 0.7 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Polyphony with , inside struct -- Super with d1 of 4 et Buf à 45 & Fol de 4 XXX

td1 x $ slow 2 $ struct s15d1 $ sound "^1Fol" # n "[0 1 2, 7 8 9]/8 [14 3, 2 1 3 10 10]/4" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ n "[[0 1, 2 7 8, 9 ]/16 [14, 3 2, 1 [3 10], 10]/4]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n

td1 x $ slow 2 $ n "[[0 1, 2 7 8 9 ]/16, [14, 3 2 1 [3 10], 10]/4]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n -- Cool with Buf 42 & Fol 2 ou Fol 5 & Buf 29 XXX

td1 x $ slow 2 $ n "[[0 1, 2 7 8 9 ]/16, [14, 3 2 1 [3 10], 10]/4, [12 13 3, 9 10 12 ]/6]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- to develop

td1 x $ slow 2 $ n "[[1 0, 3 6 5]/16, [12, 4 5 [2 11], 9]/4, [10 11 2, 8 9 11]/6]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- to develop

td1 x $ slow 2 $ n (fit 1 [7,8,9,10,11,12,13,14,15,16] "[[1 5 7 9 10 0, 3 6 5]/16, [2, 4 5 [2 11],8]/4, [10 11 2, 8 9 11]/6]*[^d1]") # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- Try 1

td1 x $ slow 2 $ n "[[0 3 5 7]/16, [2 4 [6 8], 10]/4, [1 11 13]/6]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ n "[[2 2 2 2]/16, [5 5 5 5]/4, [9 9 9 9]/6]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran"

td1 x $ slow 2 $ n "[[9 7 5 3 1]/16, [12 10 8 6]/4, [4 2 0]/6]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- to develop

td1 x $ slow 2 $ n "[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10]/8*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n

td1 x $ n "[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10*3]/8*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n

td1 x $ slow 2 $ n "[[0 1 2 7 8 9 ]/8 [14 3 2 1 [3 10] 10]/4]*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n -- very cool with Fol 63 & Buf 27 ou 17

td1 x $ slow 2 $ n "{[0 1 2 7 8 9 ]/8, [14 3 2 1 [3 10], 10]/4}*[^d1]" # sound "^1Fol" |+ n "^1Buf" # gain 0.8 # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- n

td1 x $ fast (("^d1"/16) + 0.006) $ jux rev $ arp "<updown thumbup pinkyupdown converge diverge>" $ n "<c4'maj'6 e4'min7'8 g5'maj'5 a5'maj'4>" # sound "^1Fol" |+ n "^1Buf" # orbit "^1Xon" # speed "^1Rat" # djf "^1Ran" -- # room 0.3 # sz 0.7

td1 x $ fast (("^d1"/16) + 0.006) $ jux rev $ arp "<updown thumbup pinkyupdown converge diverge>" $ n "<c4'maj'6 e4'min7'8 g5'maj'5 a5'maj'4>" # room 0.3 # sz 0.7 # s "superpiano" # gain 0.8 # orbit "^1Xon"

td1 x $ fast (("^d1"/16) + 0.006) $ jux rev $ slow 1 $ arp "<updown thumbup pinkyupdown converge diverge>" $ n "<c4'maj'6 e4'min7'8 g5'maj'5 a5'maj'4>" # room 0.3 # sz 0.7 # s "<superpiano superhoover>" # slide (sine/4) # accelerate (sine/8) # decay (sine/4) # gain 0.8 # orbit "^1Xon"

td1 x $ fast (("^d1"/16) + 0.006) $ arp "<updown thumbup pinkyupdown converge diverge>" $ n (slow 1 $ fmap (*0.5) $ "<c4'maj'6 e4'min7'8 g5'maj'5 a5'maj'4>") # s "superhoover" # slide (sine/4) # accelerate (sine/8) # decay (sine/4) # gain 0.8 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj'4" # sound "superhoover" # sustain 0.5 # gain 0.8 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj'4 e'min" # sound "superhoover" # sustain 0.5 # gain 0.77 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "pinkyup" $ n "c'maj'4 e'min" # sound "superhoover" # sustain 0.5 # gain 0.77 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "<pinkyup down thumbup up>" $ n "c'maj'4 e'min" # sound "superhoover" # sustain 0.5 # gain 0.77 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ jux rev $ arp "<pinkyup down thumbup up>" $ n "<c'maj'4 e4'min'8 f4'maj'4>" # sound "superhoover" # sustain 2 # room 0.3 # sz 0.9 # gain 0.6 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ chunk 4 (|- note 5) $ jux rev $ arp "<pinkyup down thumbup up>" $ n "<c'maj'4 e4'min'8 f4'maj'4>" # sound "superhoover" # sustain 2 # room 0.3 # sz 0.9 # gain 0.6 # orbit "^1Xon"
-- https://tidalcycles.org/docs/patternlib/howtos/buildarpeggios#arpeggios-from-chords
td1 x $ fast (("^d1"/6) + 0.006) $ n "c'maj" # sound "supermandolin" # legato 2 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj" # sound "supermandolin" # orbit "^1Xon" # sustain 0.5

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj'4" # sound "supermandolin" # sustain 0.5 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj'4" # sound "supermandolin" # sustain 0.5 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "up" $ n "c'maj'4 e'min" # sound "supermandolin" # sustain 0.5 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "pinkyup" $ n "c'maj'4 e'min" # sound "supermandolin" # sustain 0.5 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ arp "<pinkyup down thumbup up>" $ n "c'maj'4 e'min" # sound "supermandolin" # sustain 0.5 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ jux rev $ arp "<pinkyup down thumbup up>" $ n "<c'maj'4 e4'min'8 f4'maj'4>" # sound "supermandolin" # sustain 2 # room 0.3 # sz 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ chunk 4 (|- note 5) $ jux rev $ arp "<pinkyup down thumbup up>" $ n "<c'maj'4 e4'min'8 f4'maj'4>" # sound "supermandolin" # sustain 2 # room 0.3 # sz 0.9 # orbit "^1Xon"
-- Variation 1: Aube Gymnopédique - La douceur du réveil
td1 x $ fast (("^d1"/6) + 0.006) $ slow 2 $ sometimesBy 0.2 (rev) $ arp "<converge diverge pinkyup thumbdown>" $ n (slow 3 $ "<e3'min7 a3'min7 d3'min7 g3'maj7>") # s "superhoover" # sustain 2 # room 0.8  # size 0.9 # gain 0.7 # orbit "^1Xon"
-- Variation 2: Le Baiser de l'Aube - Plus expressif
td1 x $ fast (("^d1"/32) + 0.006) $ jux (iter 4) $ striate' 8 (1/4) $ every 3 (|+ n 2) $ arp "<up down converge diverge>" $ n "<e3'min9 a3'min9 d3'min9 g3'maj9>" # s "superpiano" # sustain 3 # room 0.8 # size 0.9 # lpf (slow 8 $ range 400 2000 sine) # gain 0.7 # orbit "^1Xon"
-- Variation 3: Solitude du Matin - Mélancolique et flottante
td1 x $ fast (("^d1"/32) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "superhoover" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "superhoover" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"
-- Variation 4: Gymnopédie Explosive - Contraste entre calme et intensité
td1 x $ fast (("^d1"/32) + 0.006) $ whenmod 8 6 (|+ n 12) $ every 4 (fast 2) $ every 3 (stut 4 0.5 0.2) $ arp "<diverge updown pinkyupdown thumbup>" $ n "<e3'min7 a3'min7 c4'maj7 g3'maj7>" # s "superhoover" # sustain (slow 8 $ range 0.5 2 sine) # room 0.6 # size 0.8 # lpf (slow 4 $ range 300 3000 sine) # gain 0.7 # orbit "^1Xon"
-- Variation 8: Solitude Impressionniste - Texture inspirée de Satie
td1 x $ fast (("^d1"/64) + 0.006) $ degradeBy 0.2 $ chunk 4 (|+ n 5) $ striate' 16 (1/4) $ arp "<converge diverge pinkyup thumbdown>" $ n "<e3'min11 a3'min11 c4'maj9 g3'maj9>" # s "superhoover" # sustain 2 # cutoff (slow 12 $ range 400 3000 sine) # resonance 0.2 # room 0.75 # size 0.9 # gain 0.6 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "skick gabkick" # gain 0.5 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "skick gabkick" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/32) + 0.006) $ degradeBy 0.2 $ chunk 4 (|+ n 5) $ striate' 16 (1/4) $ arp "<converge diverge pinkyup thumbdown>" $ n "<e3'min11 a3'min11 c4'maj9 g3'maj9>" # s "skick gabkick" # sustain 1 # cutoff (slow 12 $ range 400 3000 sine) # resonance 0.2 # room 0.75 # size 0.9 # gain 0.5 # orbit "^1Xon"
-- Both codes below from Eris Fairbanks (she/her) on Discord in patterns-snippets — 04/03/2025 22:21 -- resetCycles
do {resetCycles; d1 $ fast (("^d1"/16) + 0.006) $ stutWith 4 (3/16) ((* speed 1.01).(* gain 0.78)) $ mask "{t f t t f t f t t f}%16" $ n "{0 0 3 5 0 0 7 0 8 7 0}%16" + n "{0 -12 12 0 0 12 0 -12}%8" # s "plaits" # engine 8 # timbre 0.9 # harm 0.3 # morph 0.99 # room 0.2 # sustain ("{4 2 1 4 2 4 1}%16" * 0.3) # gain 0.77}

do {resetCycles; d1 $ fast (("^d1"/16) + 0.006) $ n (toScale [0,2,3,5,7,8,11] ("{7 0 7 0 0 7 0 7 0}%16") + "[0,16,<7 5 7 4 3>]") + n "{-12 -12 -12 [0 12]}%4" # s "plaits" # engine "<0 3>/4" # timbre (slow 8 (sine * 0.2)) # legato (range 2 6 $ slow 4 $ saw) * legato "{1 0.5 0.8 0.25 0.3}%16" # morph (range 0.1 0.5 $ slow 8 $ sine) # harm "<0 0.96 0.25 1 0.5>/4" # room 0.3 # size 0.93 # gain 0.8}

td1 x $ fast (("^d1"/6) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "supervibe" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "supervibe" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "vibsawpluck" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "vibsawpluck" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/16) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "[<donk, wub sinosc acid, ultrasaw futuresaw>]" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "[wob sinosc futuresaw, acid]" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/16) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "[<pbass, bmoog sinosc acid, ultrasaw fmtribe>]" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "[cs80leadClick sawpluck rhodes, acid]" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"

td1 x $ fast (("^d1"/6) + 0.006) $ stack [slow 2 $ arp "pinkyup" $ n "<e3'min7 a3'min7 d3'min7 g3'maj7>" # s "bmoog super303" # gain 0.7 # room 0.7, slow 4 $ n (scale "minPent" $ scramble 8 $ run 8) # s "super303 bmoog" # sustain 4 # lpf 1000 # gain 0.5] # room 0.8 # size 0.9 # orbit "^1Xon"



d1 silence -- silence will stop your pattern next cycle

do {d1 $ ampbus 1 $ sine; d1 silence}



xfadeIn 1 4 silence -- perform a crossfade transition to silence in 4 cycles
clutchIn 1 4 silence -- clutch degrades the current pattern while undegrading the next -- better on a longer number of cycles 8 ?
interpolateIn 1 4 silence -- Morph control values between patterns in a given number of cycles -- The number of cycles has no effect with silence -- stops immediately -- Other way to stop nicer than Mute -- equivalent to silence ?

-- Other ways to stop a pattern which is too long ?

histpan 1 4 silence -- This will pan the last four patterns on the d1 channel from left to right, the most recent on the left -- Weird panning effect ?

hush -- stops everything or Ctrl + Shift + h
panic -- To test when long samples - it will also kill all the synthesizers/audio samples currently running on the SuperDirt side. You should be back to total silence in no time.

hushAll


-- Tests

mapM_ (`fadeOut` 2) [1,2,3,4]
all $ fadeOut 0
all $ fadeIn 0

all $ (# legato 0)
all $ (id)

ribbon 1 2 $ note("<c d e f>")
ribbon 1227 2 $ note("<c d e f>")
d1 $ beat "[3,4,9,14]" 16 $ ribbon 1 2 $ n (irand 10) # sound "^1Fol"
d1 $ beat "[3,4,9,14]" 16 $ n (irand 10) # sound "^1Fol"

ribbon offset cycles pat = restart (slow cycles $ pure True) $ offset <~ pat

d1 $ n (slow 2 $ fmap (*7) $ run "[^d1]") # s "supergong" # decay "[1 0.2]/4" # voice "[0.5 0]/8" -- Synthesis
d1 $ n (slow 2 $ fmap (*7) $ run "[^d1]") # s "superhoover" # slide "1/4" # accelerate "[0.5 0]/8" # decay "[0.5 0]/8"
d1 $ n (slow 2 $ fmap (*7) $ "0 [1 1] [2 3] 3") # s "superhoover" # slide "[1 0.2]/4" # accelerate "[0.5 0]/8" # decay "[0.5 0]/8"
d1 $ n (slow 2 $ fmap (*7) $ "0 [1 1] [2 3] 3") # s "superhoover" # slide (sine/4) # accelerate (sine/8) # decay (sine/4)
d1 $ n (slow 2 $ fmap (*5) $ seqN) # s "superhoover" # slide (sine/4) # accelerate (sine/8) # decay (sine/4)

td1 x $ fast "^d1" $ euclid 3 4 $ slow 4 $ sound "^1Fol" # n "^1Buf" |+ n (run 2)
td1 x $ fast "^d1" $ slow 4 $ euclid 3 4 $ sound "^1Fol" # n "^1Buf" |+ n (run 2)
td1 x $ slow 3 $ euclid 3 4 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 2)
td1 x $ euclid 3 4 $ slow 3 $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 10)


td1 x $ fast "^d1" $ slow 3 $ euclid 2 5 $ sound "^1Fol" # n "^1Buf" -- |+ n (run 10)
td1 x $ struct "[t ~]*[^d1]" $ sound "^1Fol" # n "^1Buf" -- # n 0

td1 x $ fast "^d1" $ euclid 3 5 $ slow 3 $ sound "^1Fol" # n "^1Buf" -- |+ n (run 2)
td1 x $ fast "^d1" $ slow 3 $ euclid 3 5 $ sound "^1Fol" # n "^1Buf" -- |+ n (run 2)

td1 x $ slow 1 $ euclid 5 12 $ sound "[^1Fol]*[^d1]" # n ("0 2 1 7 0 8"+"^1Buf")
td1 x $ slow "^d1" $ euclid 5 12 $ sound "[^1Fol]*[^d1]" # n ("6 2 4 2 10 9 8 11"+"^1Buf")
td1 x $ slow 1 $ euclid 5 12 $ sound "[^1Fol]*[^d1]" # n (irand 200)
td1 x $ fast "^d1" $ slow 3 $ euclid 5 12 $ sound "^1Fol" # n ("0 2 1 7 0 8"+"^1Buf")



lpfbus ???

td1 x $ slow 2 $ struct "<[t ~ ~ ~]!15 t(<1 2>,32) [t ~ ~ ~]!15 [t t? t? t?] [t ~ ~ ~]!15 [[t t?] t? t? t?]>*[^d1]" $ sound "^1Fol" # n "^1Buf" |+ n "0 1 2 7 8 9 14 3 2 1 3 10 10"

td1 x $ slow 2 $ struct "<[t ~ ~ ~]!15 t(<1 2>,32) [t ~ ~ ~]!15 [t t? t? t?] [t ~ ~ ~]!15 [[t t?] t? t? t?]>*[^d1]" $ sound "^1Fol" # n "^1Buf" |+ n "[0 1 2 7] 8 9 [14 3 2 1 [3 10] 10]"



td1 x $ n "[0 0 0 0]*[^d1]" # sound "^1Fol" |+ n "^1Buf"
td1 x $ n "[0 0 0 0]![^d1]" # sound "^1Fol" |+ n "^1Buf"

td1 x $ n "[0 0 0 0]*[^d1]" # sustain 1 # sound "^1Fol" |+ n "^1Buf"
td1 x $ n "[0 0 0 0]![^d1]" # sustain 1 # sound "^1Fol" |+ n "^1Buf"



-- line 75
td1 x $ fast "^d1" $ slow 3 $ euclid 5 9 $ sound "^1Fol" # n ("6 7 8"+"^1Buf")
td1 x $ slow 3 $ euclid 5 9 $ sound "[^1Fol]*[^d1]" # n ("6 7 8"+"^1Buf")
td1 x $ euclid 5 9 $ slow 3 $ sound "[^1Fol]*[^d1]" # n ("6 7 8"+"^1Buf")
td1 x $ euclid 5 9 $ slow 8 $ sound "[^1Fol]*[^d1]" # n ("6 7 8"+"^1Buf")



-- Tests sans structure ryhtmique, juste vitesse du "tempo"
td1 x $ sound "[^1Fol]*[^d1]" # n "^1Buf" -- |+ n (run 200)

-- Mask to integrate in functions u to play with timing ?
td1 x $ mask "1 0" $ sound "[^1Fol]*[^d1]" # n "^1Buf" -- |+ n (run 20)
td1 x $ mask "1 0 0 0" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 20)
td1 x $ mask "1 0 0 0 1 0 0 0" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 20)
td1 x $ mask "1 0 0 1 1 0 1 0" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 20)
td1 x $ mask "[1 0 0 1 1 0 1 0]/2" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 20)
td1 x $ mask "[1 0 0 1 1 0 1 0]*8" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (run 20)
td1 x $ mask "[1 0 0 1 1 0 1 0]*8" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (irand 6)



 -- n (run 20 |+ 120)



d1 $ gain "1~~1.~~~1.~~1~.~" # s "808"
d1 $ gain "1~~1.~~~1.~~1~.~" $ s "808"
-- maybe "0@3 0@4 0@3 0@6" # s "808" (unless you actually care about the gaps)



-- every 2 (degradeBy 0.4) -> très cool (à faire en preset)
-- every 2 (degradeBy 0.15)
-- degradeBy 0.4 -> la dégradation est la même sur chaque piste ? Comment avoir un aléatoire différent pour chaque piste ?



-- Euclidean Rhythms

-- E(2,5)=[x . x . .] is a thirteenth century Persian rhythm called Khafif-e-ramal [34]. It is also the metric pattern of the second movement of Tchaikovsky’s Symphony No. 6 [17]. When it is started on the second onset ([x . . x .]) it is the metric pattern of Dave Brubeck’s Take Five as well as Mars from The Planets by Gustav Holst [17].

-- E(3,4)=[x . x x] is the archetypal pattern of the Cumbia from Colombia [20], as well as a Calypso rhythm from Trinidad [13]. It is also a thirteenth century Persian rhythm called Khalif-e-saghil [34], as well as the trochoid choreic rhythmic pattern of ancient Greece [21].

-- E(3,5)=[x . x . x], when started on the second onset, is another thirteenth century Persian rhythm by the name of Khafif-e-ramal [34], as well as a Rumanian folk-dance rhythm [25].

-- E(3,7)=[x . x . x . .] is a Ruchenitza rhythm used in a Bulgarian folk-dance [24]. It is also the metric pattern of Pink Floyd’s Money [17].

-- E(3,8)=[x . . x . . x .] is the Cuban tresillo pattern discussed in the preceding [15].

-- E(4,7)=[x . x . x . x] is another Ruchenitza Bulgarian folk-dance rhythm [24].

-- E(4,9) = [x . x . x . x . .] is the Aksak rhythm of Turkey [6]. It is also the metric pattern used by Dave Brubeck in his piece Rondo a la Turk [17].

-- E(4,11) = [x . . x . . x . . x .] is the metric pattern used by Frank Zappa in his piece titled Outside Now [17].

-- E(5,6)=[x . x x x x] yields the York-Samai pattern, a popular Arab rhythm, when started on the second onset [30].

-- E(5,7)=[x . x x . x x] is the Nawakhat pattern, another popular Arab rhythm [30].

-- E(5,8)=[x . x x . x x .] is the Cuban cinquillo pattern discussed in the preceding [15]. When it is started on the second onset it is also the Spanish Tango [13] and a thirteenth century Persian rhythm, the Al-saghilal-sani [34].

-- E(5,9)=[x . x . x . x . x] is a popular Arab rhythm called Agsag-Samai [30]. When started on the second onset, it is a drum pattern used by the Venda in South Africa [26], as well as a Rumanian folk-dance rhythm [25].

-- E(5,11)=[x . x . x . x . x . .] is the metric pattern used by Moussorgsky in Pictures at an Exhibition [17].

-- E(5,12) = [x . . x . x . . x . x .] is the Venda clapping pattern of a South African children’s song [24].

-- E(5,16) = [x . . x . . x . . x . . x . . . .] is the Bossa-Nova rhythm necklace of Brazil. The actual BossaNova rhythm usually starts on the third onset as follows: [x . . x . . x . . . x . . x . .] [31]. However, there are other starting places as well, as for example [x . . x . . x . . x . . . x . .] [3].

-- E(7,8) = [x . x x x x x x] is a typical rhythm played on the Bendir (frame drum), and used in the accompaniment of songs of the Tuareg people of Libya [30].

hush



td1 x $ mask "[1 0 0 0 1 0 1 0]*[^d1]" $ sound "[^1Fol]*[^d1]" # n "^1Buf" |+ n (fmap ([0, 1, 2, 3]!!) (markovPat "[^d1]" 0 [ [ 0.1, 1.1, 0.9, 0.1 ], [ 0.9, 0.1, 1.1, 1.1 ], [ 0.5, 0.5, 0.05, 1 ], [ 0.5, 0.5, 0.75, 0.25 ] ] ))



td1 x $ fast "^d1" $ slow 3 $ euclid 5 9 $ sound "^1Fol" # n ("6 7 8"+"^1Buf")

$ mask "[1 0 0 0 1 0 1 0]*[^d1]"



d1 $ n (slow 2 $ fmap (*7) $ run 8) # s "supergong" # decay "[1 0.2]/4" # voice "[0.5 0]/8"

d1 $ n (slow 2 $ fmap (*7) $ run 8) # s "superhoover" # slide "[1 0.2]/4" # accelerate "[0.5 0]/8" # decay "[0.5 0]/8"



td1 x $ slow 3 $ struct "<[t ~ ~ ~]!15 [t ~ t ~]>*[^d1]" $ dud1
 -- $ n "0 1 2 3"
 $ n (irand 24)
 -- # sustain (select t leg)
 # s "acid"
 -- # engine 1
 -- # engine 4
 -- # engine (fmap (ceiling . (* 15)) "^1FolN")
 -- # room 0.7
 -- # gain 0.75
 -- # harm (range 0.8 1.0 $ perlin)
 -- # harm ("[^1Buf]" / 19)
 -- # harm "1"
 -- # reso (range 0.45 0.5 $ perlin)
 -- # acof (range 0.45 0.5 $ perlin)
 -- # dist (range 0.45 0.5 $ perlin)
 -- # timbre "^1BufN"
 -- # slow 8 (morph (range 1.0 0.9 $ square))
 -- # morph ("[^1Buf]" / 19)
-- # morph 1



n(run(3)).segment(8).scale("C:minor") -- a simple way to do "euclidean melodies"
n(run(3)).segment(8).scale("C:minor").euclidLegato(3,8) -- or with rhythm as well



chordList
chordTable

hush
